{"ast":null,"code":"import _slicedToArray from\"/Users/ducdoan2002/Desktop/chat-app/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useRef,useEffect}from'react';import{Form,InputGroup,Button}from'react-bootstrap';import{useConversation}from'./contexts/ConversationProvider';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function CurrentConversation(props){var cons=useConversation();var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),textMessage=_useState2[0],setTextMessage=_useState2[1];var latestMessage=useRef();//newMessage is for useEffect => call useEffect only when newMessage val changes\nvar _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),newMessage=_useState4[0],setNewMessage=_useState4[1];var handleChangeMessage=function handleChangeMessage(e){setTextMessage(e.target.value);};var handleSendMessage=function handleSendMessage(e){console.log(textMessage);e.preventDefault();if(textMessage.trim().length>0){console.log(cons.selectedConversation.recipient.map(function(user){return user.id;}));cons.sendMessage(cons.selectedConversation.recipient.map(function(user){return user.id;}),textMessage);setNewMessage(function(prev){return!prev;});console.log(\"Sent\");}setTextMessage(\"\");};useEffect(function(){console.log(latestMessage);if(!latestMessage.current)return;if(latestMessage.current){latestMessage.current.scrollIntoView();}},[newMessage]);console.log(cons);return/*#__PURE__*/_jsxs(\"div\",{className:\"w-100 d-flex flex-column justify-content-end flex-grow-1\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"overflow-auto\",children:/*#__PURE__*/_jsx(\"div\",{className:\"flex-grow-1 d-flex\",children:/*#__PURE__*/_jsx(\"div\",{className:\"flex-column align-items-start justify-content-end px-3 flex-grow-1\",children:cons.selectedConversation&&cons.selectedConversation.message.map(function(mes,index){var newMessage=cons.selectedConversation.message.length-1===index;return/*#__PURE__*/_jsxs(\"div\",{ref:newMessage?latestMessage:null,className:\"d-flex flex-column \".concat(mes.fromMe?'align-items-end':'align-items-start',\" mb-2 w-100\"),children:[/*#__PURE__*/_jsx(\"div\",{className:\"\".concat(mes.fromMe?'rounded bg-primary text-white p-2':'rounded bg-light p-2'),children:mes.text}),/*#__PURE__*/_jsx(\"div\",{children:mes.fromMe?/*#__PURE__*/_jsx(\"span\",{style:{color:'#A49E98'},children:\"You\"}):/*#__PURE__*/_jsx(\"span\",{style:{color:'#A49E98'},children:mes.senderName})})]},index);})})})}),/*#__PURE__*/_jsx(Form,{onSubmit:handleSendMessage,className:\"p-3\",children:/*#__PURE__*/_jsx(Form.Group,{children:/*#__PURE__*/_jsxs(InputGroup,{children:[/*#__PURE__*/_jsx(Form.Control,{as:\"textarea\",required:true,value:textMessage,onChange:handleChangeMessage,style:{height:\"75px\",resize:\"none\"}}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"primary\",onClick:handleSendMessage,style:{fontWeight:700},children:\"Send\"})]})})})]});}","map":{"version":3,"sources":["/Users/ducdoan2002/Desktop/chat-app/client/src/components/CurrentConversation.jsx"],"names":["React","useState","useRef","useEffect","Form","InputGroup","Button","useConversation","CurrentConversation","props","cons","textMessage","setTextMessage","latestMessage","newMessage","setNewMessage","handleChangeMessage","e","target","value","handleSendMessage","console","log","preventDefault","trim","length","selectedConversation","recipient","map","user","id","sendMessage","prev","current","scrollIntoView","message","mes","index","fromMe","text","color","senderName","height","resize","fontWeight"],"mappings":"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","sourcesContent":["import React, {useState, useRef, useEffect} from 'react';\nimport { Form, InputGroup, Button } from 'react-bootstrap';\nimport { useConversation } from './contexts/ConversationProvider';\n\nexport default function CurrentConversation(props) {\n    const cons = useConversation();\n    const [textMessage, setTextMessage] = useState(\"\");\n    const latestMessage = useRef();\n    //newMessage is for useEffect => call useEffect only when newMessage val changes\n    const [newMessage, setNewMessage] = useState(false); \n    const handleChangeMessage = (e) => {\n        setTextMessage(e.target.value);\n    }\n    const handleSendMessage = (e) => {\n        console.log(textMessage);\n        e.preventDefault();\n        if (textMessage.trim().length > 0){\n            console.log(cons.selectedConversation.recipient.map((user)=> {return user.id}));\n            cons.sendMessage(cons.selectedConversation.recipient.map((user)=> {return user.id}), textMessage);\n            setNewMessage(prev => !prev);\n            console.log(\"Sent\");\n        }\n        setTextMessage(\"\");\n    }\n    \n    useEffect(()=>{\n        console.log(latestMessage);\n        if (!latestMessage.current) return;\n        if (latestMessage.current){\n            latestMessage.current.scrollIntoView();\n        }\n    },[newMessage]);\n\n    console.log(cons);\n    return (\n        <div className=\"w-100 d-flex flex-column justify-content-end flex-grow-1\">\n            <div className='overflow-auto'>\n                <div className=\"flex-grow-1 d-flex\">\n                    <div className=\"flex-column align-items-start justify-content-end px-3 flex-grow-1\">\n                        {cons.selectedConversation && cons.selectedConversation.message.map((mes, index) => {\n                            const newMessage = cons.selectedConversation.message.length - 1 === index;\n                            return (\n                                <div \n                                    ref={newMessage ? latestMessage : null}\n                                    key={index}\n                                    className={`d-flex flex-column ${mes.fromMe ? 'align-items-end' : 'align-items-start'} mb-2 w-100`}\n                                >\n                                    <div className={`${mes.fromMe ?'rounded bg-primary text-white p-2':'rounded bg-light p-2'}`}>{mes.text}</div>\n                                        <div>{mes.fromMe ? \n                                            <span style={{color: '#A49E98'}}>You</span>\n                                            : \n                                            <span style={{color: '#A49E98'}}>{mes.senderName}</span>}\n                                        </div>\n                                </div>\n                            )\n                        })}\n                    </div>\n                </div>\n            </div>\n            <Form onSubmit={handleSendMessage} className='p-3'>\n                <Form.Group>\n                    <InputGroup>\n                        <Form.Control\n                            as=\"textarea\"\n                            required\n                            value={textMessage}\n                            onChange={handleChangeMessage}\n                            style={{height: \"75px\", resize:\"none\"}}\n                        />\n                        <Button type=\"submit\" variant='primary' onClick={handleSendMessage} style={{fontWeight: 700}}>Send</Button>\n                    </InputGroup>\n                    \n                </Form.Group>\n            </Form>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}