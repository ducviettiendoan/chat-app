{"ast":null,"code":"var _jsxFileName = \"/Users/ducdoan2002/Desktop/chat-app/client/src/components/contexts/ConversationProvider.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport useLocalStorage from '../../customHooks/useLocalStorage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConversationContext = /*#__PURE__*/React.createContext(); //small custom Hook\n\nexport const useConversation = () => {\n  _s();\n\n  return useContext(ConversationContext);\n};\n\n_s(useConversation, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport default function ConversationProvider(_ref) {\n  _s2();\n\n  let {\n    children\n  } = _ref;\n  const [conversations, setConversations] = useLocalStorage('conversations', []); //storing a new Contact the the state contacts\n\n  const createConversation = selectedUser => {\n    setConversations(prev => [...prev, {\n      selectedUser,\n      message: []\n    }]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ConversationContext.Provider, {\n    value: {\n      conversations,\n      createConversation\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(ConversationProvider, \"9L8V6GHkDskoUaMzXQxf9MBUh4s=\", false, function () {\n  return [useLocalStorage];\n});\n\n_c = ConversationProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConversationProvider\");","map":{"version":3,"sources":["/Users/ducdoan2002/Desktop/chat-app/client/src/components/contexts/ConversationProvider.jsx"],"names":["React","useContext","useLocalStorage","ConversationContext","createContext","useConversation","ConversationProvider","children","conversations","setConversations","createConversation","selectedUser","prev","message"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,OAAOC,eAAP,MAA4B,mCAA5B;;AAEA,MAAMC,mBAAmB,gBAAGH,KAAK,CAACI,aAAN,EAA5B,C,CAEA;;AACA,OAAO,MAAMC,eAAe,GAAG,MAAM;AAAA;;AACjC,SAAOJ,UAAU,CAACE,mBAAD,CAAjB;AACH,CAFM;;GAAME,e;;AAKb,eAAe,SAASC,oBAAT,OAA0C;AAAA;;AAAA,MAAZ;AAACC,IAAAA;AAAD,GAAY;AACrD,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCP,eAAe,CAAC,eAAD,EAAkB,EAAlB,CAAzD,CADqD,CAErD;;AACA,QAAMQ,kBAAkB,GAAIC,YAAD,IAAkB;AACzCF,IAAAA,gBAAgB,CAACG,IAAI,IAAI,CAAC,GAAGA,IAAJ,EAAU;AAACD,MAAAA,YAAD;AAAeE,MAAAA,OAAO,EAAE;AAAxB,KAAV,CAAT,CAAhB;AACH,GAFD;;AAGA,sBACI,QAAC,mBAAD,CAAqB,QAArB;AAA8B,IAAA,KAAK,EAAE;AAACL,MAAAA,aAAD;AAAgBE,MAAAA;AAAhB,KAArC;AAAA,cACKH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;IAXuBD,oB;UACsBJ,e;;;KADtBI,oB","sourcesContent":["import React, {useContext} from 'react';\nimport useLocalStorage from '../../customHooks/useLocalStorage';\n\nconst ConversationContext = React.createContext();\n\n//small custom Hook\nexport const useConversation = () => {\n    return useContext(ConversationContext);\n}\n\n\nexport default function ConversationProvider({children}) {\n    const [conversations, setConversations] = useLocalStorage('conversations', []);\n    //storing a new Contact the the state contacts\n    const createConversation = (selectedUser) => {\n        setConversations(prev => [...prev, {selectedUser, message: []}]);\n    }\n    return (\n        <ConversationContext.Provider value={{conversations, createConversation}}>\n            {children}\n        </ConversationContext.Provider>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}