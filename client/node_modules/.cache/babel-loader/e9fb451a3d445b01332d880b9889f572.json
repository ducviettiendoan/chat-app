{"ast":null,"code":"var _jsxFileName = \"/Users/ducdoan2002/Desktop/chat-app/client/src/components/SocketProvider.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocketContext = /*#__PURE__*/React.createContext();\nexport const useSocket = () => {\n  _s();\n\n  return useContext(SocketContext);\n};\n\n_s(useSocket, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport default function SocketProvider(_ref) {\n  _s2();\n\n  let {\n    id,\n    children\n  } = _ref;\n  const [socket, setSocket] = useState(null);\n  useEffect(() => {\n    const newSocket = io(\"http://localhost:5000\", {\n      query: id\n    });\n    setSocket(newSocket); //each time call io() -> create a new Socket instance => close everytime update socket -> reduce the amount of \n    //sockets that connected to the server\n\n    newSocket.close();\n  }, [id]);\n  console.log(socket);\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: socket,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(SocketProvider, \"NvwYO9vJOwIMt5STdlMKfWhuxZw=\");\n\n_c = SocketProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"SocketProvider\");","map":{"version":3,"sources":["/Users/ducdoan2002/Desktop/chat-app/client/src/components/SocketProvider.jsx"],"names":["React","useContext","useState","useEffect","io","SocketContext","createContext","useSocket","SocketProvider","id","children","socket","setSocket","newSocket","query","close","console","log"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,QAA3B,EAAqCC,SAArC,QAAqD,OAArD;AACA,SAAQC,EAAR,QAAiB,kBAAjB;;AACA,MAAMC,aAAa,gBAAGL,KAAK,CAACM,aAAN,EAAtB;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAC3B,SAAON,UAAU,CAACI,aAAD,CAAjB;AACH,CAFM;;GAAME,S;;AAIb,eAAe,SAASC,cAAT,OAAwC;AAAA;;AAAA,MAAhB;AAACC,IAAAA,EAAD;AAAKC,IAAAA;AAAL,GAAgB;AACnD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,IAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMU,SAAS,GAAGT,EAAE,CAAC,uBAAD,EAA0B;AAACU,MAAAA,KAAK,EAAEL;AAAR,KAA1B,CAApB;AACAG,IAAAA,SAAS,CAACC,SAAD,CAAT,CAFY,CAGZ;AACA;;AACAA,IAAAA,SAAS,CAACE,KAAV;AACH,GANQ,EAMN,CAACN,EAAD,CANM,CAAT;AAOAO,EAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ;AACA,sBACI,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAIA,MAAjC;AAAA,cACKD;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;IAhBuBF,c;;KAAAA,c","sourcesContent":["import React, {useContext, useState, useEffect} from 'react';\nimport {io} from 'socket.io-client';\nconst SocketContext = React.createContext();\n\nexport const useSocket = () => {\n    return useContext(SocketContext);\n}\n\nexport default function SocketProvider({id, children}) {\n    const [socket, setSocket] = useState(null);\n\n    useEffect(() => {\n        const newSocket = io(\"http://localhost:5000\", {query: id});\n        setSocket(newSocket);\n        //each time call io() -> create a new Socket instance => close everytime update socket -> reduce the amount of \n        //sockets that connected to the server\n        newSocket.close();\n    }, [id])\n    console.log(socket);\n    return (\n        <SocketContext.Provider value = {socket}>\n            {children}\n        </SocketContext.Provider>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}