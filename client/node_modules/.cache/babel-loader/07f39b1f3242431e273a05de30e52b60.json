{"ast":null,"code":"var _jsxFileName = \"/Users/ducdoan2002/Desktop/chat-app/client/src/components/modal/ConversationModal.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport { Modal, Form, Button } from 'react-bootstrap';\nimport { useContacts } from '../contexts/ContactsProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ConversationModal(_ref) {\n  _s();\n\n  let {\n    closeShow\n  } = _ref;\n  const contacts = useContacts();\n\n  const createNewConversation = e => {\n    e.preventDefault();\n    closeShow();\n  };\n\n  const handleCheckConversation = () => {};\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: \"Create new Conversation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: createNewConversation,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          children: contacts.contacts.map(contact => {\n            return /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: contact.id,\n              children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                  type: \"checkbox\",\n                  label: contact.username,\n                  onChange: () => handleCheckConversation(contact.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 24,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: createNewConversation,\n          className: \"mt-3\",\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ConversationModal, \"Q7ikNWIcCKCn7gGnJ9ivNAloLWA=\", false, function () {\n  return [useContacts];\n});\n\n_c = ConversationModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConversationModal\");","map":{"version":3,"sources":["/Users/ducdoan2002/Desktop/chat-app/client/src/components/modal/ConversationModal.jsx"],"names":["React","useRef","Modal","Form","Button","useContacts","ConversationModal","closeShow","contacts","createNewConversation","e","preventDefault","handleCheckConversation","map","contact","id","username"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,MAAf,QAA4B,OAA5B;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,MAAtB,QAAoC,iBAApC;AACA,SAASC,WAAT,QAA4B,8BAA5B;;;AAEA,eAAe,SAASC,iBAAT,OAAwC;AAAA;;AAAA,MAAb;AAACC,IAAAA;AAAD,GAAa;AACrD,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;;AACA,QAAMI,qBAAqB,GAAIC,CAAD,IAAO;AACnCA,IAAAA,CAAC,CAACC,cAAF;AACAJ,IAAAA,SAAS;AACV,GAHD;;AAIA,QAAMK,uBAAuB,GAAG,MAAM,CAErC,CAFD;;AAGA,sBACE;AAAA,4BACA,QAAC,KAAD,CAAO,MAAP;AAAc,MAAA,WAAW,EAAE,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,KAAD,CAAO,IAAP;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAEH,qBAAhB;AAAA,gCACE,QAAC,IAAD,CAAM,KAAN;AAAA,oBACGD,QAAQ,CAACA,QAAT,CAAkBK,GAAlB,CAAuBC,OAAD,IAAa;AAClC,gCACE,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,SAAS,EAAEA,OAAO,CAACC,EAA/B;AAAA,qCACE,QAAC,IAAD,CAAM,KAAN;AAAA,uCACE,QAAC,IAAD,CAAM,KAAN;AAAY,kBAAA,IAAI,EAAC,UAAjB;AAA4B,kBAAA,KAAK,EAAED,OAAO,CAACE,QAA3C;AAAqD,kBAAA,QAAQ,EAAE,MAAMJ,uBAAuB,CAACE,OAAO,CAACC,EAAT;AAA5F;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF;AAOD,WARA;AADH;AAAA;AAAA;AAAA;AAAA,gBADF,eAYE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEN,qBAAjB;AAAwC,UAAA,SAAS,EAAC,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA,kBADF;AAuBD;;GAhCuBH,iB;UACLD,W;;;KADKC,iB","sourcesContent":["import React, {useRef} from 'react';\nimport { Modal, Form, Button } from 'react-bootstrap';\nimport { useContacts } from '../contexts/ContactsProvider';\n\nexport default function ConversationModal({closeShow}) {\n  const contacts = useContacts();\n  const createNewConversation = (e) => {\n    e.preventDefault();\n    closeShow();\n  }\n  const handleCheckConversation = () => {\n\n  }\n  return (\n    <>\n    <Modal.Header closeButton={true}>Create new Conversation</Modal.Header>\n    <Modal.Body>\n      <Form onSubmit={createNewConversation}>\n        <Form.Group>\n          {contacts.contacts.map((contact) => {\n            return (\n              <Form.Group controlId={contact.id}>\n                <Form.Check>\n                  <Form.Check type=\"checkbox\" label={contact.username} onChange={() => handleCheckConversation(contact.id)} />\n                </Form.Check>\n              </Form.Group>\n            )\n          })}\n        </Form.Group>\n        <Button onClick={createNewConversation} className=\"mt-3\">\n            Create\n        </Button>\n    </Form>\n    </Modal.Body>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}