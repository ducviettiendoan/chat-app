{"ast":null,"code":"var _jsxFileName = \"/Users/ducdoan2002/Desktop/chat-app/client/src/components/modal/ConversationModal.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Modal, Form, Button } from 'react-bootstrap';\nimport { useContacts } from '../contexts/ContactsProvider';\nimport { useConversation } from '../contexts/ConversationProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ConversationModal(_ref) {\n  _s();\n\n  let {\n    closeShow\n  } = _ref;\n  const contacts = useContacts();\n  const {\n    convers\n  } = useConversation();\n  console.log(convers);\n  const [selectedContacts, setSelectedContacts] = useState([]);\n\n  const createNewConversation = e => {\n    e.preventDefault();\n    convers.createConversation(selectedContacts);\n    closeShow();\n  };\n\n  const handleCheckConversation = id => {\n    if (selectedContacts.includes(id)) {\n      setSelectedContacts(prev => prev.filter(idNotCheck => idNotCheck !== id));\n    } else {\n      setSelectedContacts(prev => [...prev, id]);\n    }\n  };\n\n  console.log(selectedContacts);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: \"Create new Conversation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: createNewConversation,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          children: contacts.contacts.map(contact => {\n            return /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: contact.id,\n              children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                  type: \"checkbox\",\n                  label: contact.username,\n                  onChange: () => handleCheckConversation(contact.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: createNewConversation,\n          className: \"mt-3\",\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ConversationModal, \"y98Rw7lq4i7hyee2h8eLIIgK3VY=\", false, function () {\n  return [useContacts, useConversation];\n});\n\n_c = ConversationModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConversationModal\");","map":{"version":3,"sources":["/Users/ducdoan2002/Desktop/chat-app/client/src/components/modal/ConversationModal.jsx"],"names":["React","useState","Modal","Form","Button","useContacts","useConversation","ConversationModal","closeShow","contacts","convers","console","log","selectedContacts","setSelectedContacts","createNewConversation","e","preventDefault","createConversation","handleCheckConversation","id","includes","prev","filter","idNotCheck","map","contact","username"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,MAAtB,QAAoC,iBAApC;AACA,SAASC,WAAT,QAA4B,8BAA5B;AACA,SAASC,eAAT,QAAgC,kCAAhC;;;AAEA,eAAe,SAASC,iBAAT,OAAwC;AAAA;;AAAA,MAAb;AAACC,IAAAA;AAAD,GAAa;AACrD,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAM;AAACK,IAAAA;AAAD,MAAYJ,eAAe,EAAjC;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,QAAM,CAACG,gBAAD,EAAkBC,mBAAlB,IAAyCb,QAAQ,CAAC,EAAD,CAAvD;;AACA,QAAMc,qBAAqB,GAAIC,CAAD,IAAO;AACnCA,IAAAA,CAAC,CAACC,cAAF;AACAP,IAAAA,OAAO,CAACQ,kBAAR,CAA2BL,gBAA3B;AACAL,IAAAA,SAAS;AACV,GAJD;;AAKA,QAAMW,uBAAuB,GAAIC,EAAD,IAAQ;AACtC,QAAIP,gBAAgB,CAACQ,QAAjB,CAA0BD,EAA1B,CAAJ,EAAkC;AAChCN,MAAAA,mBAAmB,CAACQ,IAAI,IAAIA,IAAI,CAACC,MAAL,CAAaC,UAAD,IAAeA,UAAU,KAAKJ,EAA1C,CAAT,CAAnB;AACD,KAFD,MAGI;AACFN,MAAAA,mBAAmB,CAACQ,IAAI,IAAI,CAAC,GAAGA,IAAJ,EAAUF,EAAV,CAAT,CAAnB;AACD;AACF,GAPD;;AAQAT,EAAAA,OAAO,CAACC,GAAR,CAAYC,gBAAZ;AACA,sBACE;AAAA,4BACA,QAAC,KAAD,CAAO,MAAP;AAAc,MAAA,WAAW,EAAE,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,KAAD,CAAO,IAAP;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAEE,qBAAhB;AAAA,gCACE,QAAC,IAAD,CAAM,KAAN;AAAA,oBACGN,QAAQ,CAACA,QAAT,CAAkBgB,GAAlB,CAAuBC,OAAD,IAAa;AAClC,gCACE,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,SAAS,EAAEA,OAAO,CAACN,EAA/B;AAAA,qCACE,QAAC,IAAD,CAAM,KAAN;AAAA,uCACE,QAAC,IAAD,CAAM,KAAN;AAAY,kBAAA,IAAI,EAAC,UAAjB;AAA4B,kBAAA,KAAK,EAAEM,OAAO,CAACC,QAA3C;AAAqD,kBAAA,QAAQ,EAAE,MAAMR,uBAAuB,CAACO,OAAO,CAACN,EAAT;AAA5F;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF;AAOD,WARA;AADH;AAAA;AAAA;AAAA;AAAA,gBADF,eAYE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEL,qBAAjB;AAAwC,UAAA,SAAS,EAAC,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA,kBADF;AAuBD;;GA1CuBR,iB;UACLF,W,EACCC,e;;;KAFIC,iB","sourcesContent":["import React, {useState} from 'react';\nimport { Modal, Form, Button } from 'react-bootstrap';\nimport { useContacts } from '../contexts/ContactsProvider';\nimport { useConversation } from '../contexts/ConversationProvider';\n\nexport default function ConversationModal({closeShow}) {\n  const contacts = useContacts();\n  const {convers} = useConversation();\n  console.log(convers);\n  const [selectedContacts,setSelectedContacts] = useState([]);\n  const createNewConversation = (e) => {\n    e.preventDefault();\n    convers.createConversation(selectedContacts);\n    closeShow();\n  }\n  const handleCheckConversation = (id) => {\n    if (selectedContacts.includes(id)){\n      setSelectedContacts(prev => prev.filter((idNotCheck)=> idNotCheck !== id));\n    }\n    else{\n      setSelectedContacts(prev => [...prev, id]);\n    }\n  }\n  console.log(selectedContacts);\n  return (\n    <>\n    <Modal.Header closeButton={true}>Create new Conversation</Modal.Header>\n    <Modal.Body>\n      <Form onSubmit={createNewConversation}>\n        <Form.Group>\n          {contacts.contacts.map((contact) => {\n            return (\n              <Form.Group controlId={contact.id}>\n                <Form.Check>\n                  <Form.Check type=\"checkbox\" label={contact.username} onChange={() => handleCheckConversation(contact.id)} />\n                </Form.Check>\n              </Form.Group>\n            )\n          })}\n        </Form.Group>\n        <Button onClick={createNewConversation} className=\"mt-3\">\n            Create\n        </Button>\n    </Form>\n    </Modal.Body>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}